# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 11

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

set_from_resource $term_background background
set_from_resource $term_foreground foreground
set_from_resource $term_color0     color0
set_from_resource $term_color1     color1
set_from_resource $term_color2     color2
set_from_resource $term_color3     color3
set_from_resource $term_color4     color4
set_from_resource $term_color5     color5
set_from_resource $term_color6     color6
set_from_resource $term_color7     color7
set_from_resource $term_color8     color8
set_from_resource $term_color9     color9
set_from_resource $term_color10    color10
set_from_resource $term_color11    color11
set_from_resource $term_color12    color12
set_from_resource $term_color13    color13
set_from_resource $term_color14    color14
set_from_resource $term_color15    color15

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# lock screen
bindsym $mod+s --release exec slock

# launch alsamixer
bindsym $mod+Ctrl+m exec terminal -e 'alsamixer'

# lauch htop
bindsym $mod+Ctrl+t exec terminal -e 'htop'

# launch ranger file browser
bindsym $mod+Ctrl+r exec terminal -e 'ranger'

# screenshot keys
bindsym $mod+Print exec maim -s /home/felix/Pictures/Screenshots/screenshot-$(date +%Y-%m-%d-%H-%M-%S).png
bindsym $mod+ctrl+Print exec maim /home/felix/Pictures/Screenshots/screenshot-$(date +%Y-%m-%d-%H-%M-%S).png

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# Configure border style <normal|1pixel|pixel xx|none|pixel>
new_window pixel 1
new_float normal

# Hide borders
hide_edge_borders none

# change borders
bindsym $mod+u border none
bindsym $mod+y border pixel 1
bindsym $mod+n border normal

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# workspace back and forth (with/without active container)
workspace_auto_back_and_forth yes
bindsym $mod+w workspace back_and_forth
bindsym $mod+Shift+w move container to workspace back_and_forth; workspace back_and_forth

# toddle between horizontally split and tabbed layout
bindsym $mod+t layout toggle splith tabbed

# split orientation
bindsym $mod+g split h;exec notify-send 'tile horizontally'
bindsym $mod+v split v;exec notify-send 'tile vertically'

# toggle fullscreen mode for the focused container
bindsym $mod+m fullscreen toggle

# toggle tiling / floating
bindsym $mod+f floating toggle

# change focus between tiling / floating windows
bindsym $mod+Shift+f focus mode_toggle

# toggle sticky
bindsym $mod+Shift+s sticky toggle

# focus the parent container
bindsym $mod+p focus parent

# focus the child container
bindsym $mod+c focus child

#navigate workspaces next / previous
bindsym $mod+Ctrl+l workspace next
bindsym $mod+Ctrl+h workspace prev

# Workspace names
# to display names or symbols instead of plain workspace numbers you can use
# something like: set $ws1 1:mail
#                 set $ws2 2:
set $ws1 1
set $ws2 2
set $ws3 3
set $ws4 4
set $ws5 5
set $ws6 6
set $ws7 7
set $ws8 8
set $ws9 9

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9

# Move focused container to workspace
bindsym $mod+Ctrl+1 move container to workspace $ws1
bindsym $mod+Ctrl+2 move container to workspace $ws2
bindsym $mod+Ctrl+3 move container to workspace $ws3
bindsym $mod+Ctrl+4 move container to workspace $ws4
bindsym $mod+Ctrl+5 move container to workspace $ws5
bindsym $mod+Ctrl+6 move container to workspace $ws6
bindsym $mod+Ctrl+7 move container to workspace $ws7
bindsym $mod+Ctrl+8 move container to workspace $ws8
bindsym $mod+Ctrl+9 move container to workspace $ws9

# Move to workspace with focused container
bindsym $mod+Shift+1 move container to workspace $ws1; workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2; workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3; workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4; workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5; workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6; workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7; workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8; workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9; workspace $ws9

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# Open applications on specific workspaces
# assign [class="Thunderbird"] $ws1
assign [class="Joplin"] $ws8
assign [class="Telegram"] $ws9
assign [class="Riot"] $ws9

# Open specific applications in floating mode
#for_window [title="alsamixer"] floating enable border pixel 1

# Resize window (you can also use the mouse for that)
bindsym $mod+r mode "resize"
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # exit resize mode: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

set $MENU "[f]irefox [c]lion [p]ycharm [s]potify [j]oplin [t]elegram [r]iot"
bindsym $mod+e mode $MENU
mode $MENU {
    bindsym f exec firefox, mode "default"
    bindsym c exec clion, mode "default"
    bindsym p exec pycharm, mode "default"
    bindsym s exec spotify, mode "default"
    bindsym j exec joplin, mode "default"
    bindsym t exec telegram-desktop, mode "default"
    bindsym r exec riot-desktop, mode "default"
    bindsym Return mode "default"
    bindsym Escape mode "default"
}


# Start i3bar to display a workspace bar (plus the system information i3status if available)
bar {
    status_command i3blocks
    position top
    strip_workspace_numbers yes
    colors {
        background $term_background
        statusline $term_color7
        separator  $term_color8

#                          border       background   text
        focused_workspace  $term_color8 $term_color6 $term_color8
        active_workspace   $term_color8 $term_color3 $term_color8
        inactive_workspace $term_color8 $term_color0 $term_color7
        binding_mode       $term_color8 $term_color6 $term_color8
        urgent_workspace   $term_color8 $term_color1 $term_color7
    }
}

# hide/unhide i3status bar
bindsym $mod+b bar mode toggle

# Theme colors
# class                 border       background   text         indic.       child_border
client.focused          $term_color8 $term_color6 $term_color8
client.focused_inactive $term_color8 $term_color0 $term_color7
client.unfocused        $term_color8 $term_color0 $term_color7
client.urgent           $term_color8 $term_color1 $term_color7
client.placeholder      $term_color8 $term_color0 $term_color7
client.background       $term_background

#############################
### settings for i3-gaps: ###
#############################

# Set inner/outer gaps
gaps inner 14
gaps outer -2

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace)
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
#smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
