[global/wm]

; include color
include-file = ~/.config/polybar/colors.ini

; include modules
include-file = ~/.config/polybar/modules.ini


[bar/main]

; Override monitor with environment variable
monitor = ${env:MONITOR:}

; Modules
modules-left = i3
modules-center = title
modules-right = updates-arch-combined alsa temperature cpu ram swap filesystem battery date

; Put the bar at the bottom of the screen
bottom = false

; tray position
;tray-position = right

; Prefer fixed center position for the `modules-center` block
; When false, the center position will be based on the size of the other blocks.
fixed-center = true

; Dimension defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in a width or height of 50% minus 10 pixels
width  = 100%
height = 24

; Offset defined as pixel value (e.g. 35) or percentage (e.g. 50%)
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in an offset in the x or y direction
; of 50% minus 10 pixels
offset-x = 0
offset-y = 0

; Value used for drawing rounded corners
; Note: This shouldn't be used together with border-size because the border
; doesn't get rounded. For this to work you may also need to enable
; pseudo-transparency or use a compositor like compton.
; Individual top/bottom values can be defined using:
;   radius-{top,bottom}
radius = 0.0

; Colors
background = ${colors.bg}
foreground = ${colors.fg}

; Under-/overline pixel size and argb color
; Individual values can be defined using:
;   {overline,underline}-size
;   {overline,underline}-color
line-size  = 0
line-color = ${colors.color01}

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed withing this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
; border-size can be defined as pixel value (e.g. 35) or percentage (e.g. 50%),
; the percentage can optionally be extended with a pixel offset like so:
; 50%:-10, this will result in 50% minus 10 pixels. The percentage is relative
; to the bar width or height depending on the border. (this way to specify border-size is unreleased)
border-bottom-size  = 3
border-color = ${colors.fg}

; Number of spaces to add at the beginning/end of the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 0

; Number of spaces to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin = 0

; The separator will be inserted between the output of each module
separator =

; Font
font-0 = Fira Code:size=9;2
font-1 = Font Awesome 5 Free Solid:size=10;2


[settings]

; Reload upon receiving XCB_RANDR_SCREEN_CHANGE_NOTIFY events<Paste>
screenchange-reload     = true
